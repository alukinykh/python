# 3. Создайте собственный класс-исключение, который должен проверять содержимое списка на наличие только чисел.
# Проверить работу исключения на реальном примере. Необходимо запрашивать у пользователя данные и заполнять список.
# Класс-исключение должен контролировать типы данных элементов списка.
# Примечание: длина списка не фиксирована. Элементы запрашиваются бесконечно,
# пока пользователь сам не остановит работу скрипта, введя, например, команду “stop”.
# При этом скрипт завершается, сформированный список выводится на экран.
# Подсказка: для данного задания примем, что пользователь может вводить только числа и строки.
# При вводе пользователем очередного элемента необходимо реализовать проверку типа элемента и вносить его в список,
# только если введено число. Класс-исключение должен не позволить пользователю ввести текст (не число)
# и отобразить соответствующее сообщение. При этом работа скрипта не должна завершаться.

class MyException(Exception):
    def __init__(self, txt):
        self.txt = txt


number_list = []

while True:
    try:
        next_str = input('Введите число или stop, чтобы закончить работу скрипта ')
        if next_str == 'stop':
            break
        elif next_str.isdigit():
            number_list.append(next_str)
        else:
            raise MyException(f'{next_str} не является числом')
    except MyException as err:
        print(err.txt)

print(number_list)